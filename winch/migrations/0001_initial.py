# Generated by Django 3.2.14 on 2023-01-10 07:25

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Winch',
            fields=[
                ('serial_number', models.CharField(help_text='윈치 일련번호', max_length=100, primary_key=True, serialize=False)),
                ('primary_sensor', models.CharField(blank=True, help_text='기본 센서', max_length=100, null=True)),
                ('extended_sensor', models.CharField(blank=True, help_text='확장 센서', max_length=100, null=True)),
                ('tetherline_length', models.FloatField(blank=True, help_text='티더선 전체 길이', null=True)),
                ('tetherline_limit_tension', models.FloatField(blank=True, help_text='티더선의 한계 장력', null=True)),
                ('production_year', models.TextField(blank=True, help_text='제작 년도(1901-2155)', null=True)),
            ],
            options={
                'db_table': 'winch',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WinchDataLog',
            fields=[
                ('winch_data_log_id', models.AutoField(help_text='auto increment PK', primary_key=True, serialize=False, verbose_name='id')),
                ('date', models.DateTimeField(auto_now=True, help_text='날짜', null=True)),
                ('latitude', models.FloatField(blank=True, help_text='위도', null=True)),
                ('longitude', models.FloatField(blank=True, help_text='경도', null=True)),
                ('main_power_voltage', models.FloatField(blank=True, help_text='메인 전원 전압', null=True)),
                ('tetherline_voltage', models.FloatField(blank=True, help_text='티더선 전압', null=True)),
                ('main_power_electric_current', models.FloatField(blank=True, help_text='메인 전원 전류', null=True)),
                ('tetherline_electric_current', models.FloatField(blank=True, help_text='티더선 전류', null=True)),
                ('mechanical_brake_operation', models.IntegerField(blank=True, help_text='기계식 브레이크 동작 여부', null=True)),
                ('electronic_brake_operation', models.IntegerField(blank=True, help_text='전자식 브레이크 동작 여부', null=True)),
                ('tetherline_length', models.FloatField(blank=True, help_text='티더선 길이', null=True)),
                ('tetherline_angle', models.FloatField(blank=True, help_text='티더선 각도', null=True)),
                ('tetherline_tension', models.FloatField(blank=True, help_text='티더선 장력', null=True)),
                ('pressure', models.IntegerField(blank=True, help_text='무선통신 수신감도', null=True)),
                ('temperature', models.FloatField(blank=True, help_text='온도', null=True)),
                ('wind_direction', models.CharField(blank=True, help_text='풍향', max_length=100, null=True)),
                ('wind_speed', models.FloatField(blank=True, help_text='풍속', null=True)),
                ('rain', models.IntegerField(blank=True, help_text='강우', null=True)),
                ('rssi', models.IntegerField(blank=True, db_column='RSSI', help_text='기압', null=True)),
            ],
            options={
                'db_table': 'winch_data_log',
                'managed': False,
            },
        ),
    ]
